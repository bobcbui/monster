/*
 * This file is generated by jOOQ.
 */
package net.ttcxy.chat.db.tables.records;


import java.time.LocalDateTime;

import net.ttcxy.chat.db.tables.Member;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MemberRecord extends TableRecordImpl<MemberRecord> implements Record4<String, String, String, LocalDateTime> {

    private static final long serialVersionUID = -549369528;

    /**
     * Setter for <code>chat.member.id</code>.
     */
    public MemberRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>chat.member.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>chat.member.username</code>.
     */
    public MemberRecord setUsername(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>chat.member.username</code>.
     */
    public String getUsername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>chat.member.password</code>.
     */
    public MemberRecord setPassword(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>chat.member.password</code>.
     */
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>chat.member.create_time</code>.
     */
    public MemberRecord setCreateTime(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>chat.member.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, String, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, String, String, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Member.MEMBER.ID;
    }

    @Override
    public Field<String> field2() {
        return Member.MEMBER.USERNAME;
    }

    @Override
    public Field<String> field3() {
        return Member.MEMBER.PASSWORD;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Member.MEMBER.CREATE_TIME;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUsername();
    }

    @Override
    public String component3() {
        return getPassword();
    }

    @Override
    public LocalDateTime component4() {
        return getCreateTime();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUsername();
    }

    @Override
    public String value3() {
        return getPassword();
    }

    @Override
    public LocalDateTime value4() {
        return getCreateTime();
    }

    @Override
    public MemberRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public MemberRecord value2(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public MemberRecord value3(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public MemberRecord value4(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public MemberRecord values(String value1, String value2, String value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MemberRecord
     */
    public MemberRecord() {
        super(Member.MEMBER);
    }

    /**
     * Create a detached, initialised MemberRecord
     */
    public MemberRecord(String id, String username, String password, LocalDateTime createTime) {
        super(Member.MEMBER);

        set(0, id);
        set(1, username);
        set(2, password);
        set(3, createTime);
    }
}
