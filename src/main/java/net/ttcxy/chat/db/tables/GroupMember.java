/*
 * This file is generated by jOOQ.
 */
package net.ttcxy.chat.db.tables;


import java.time.LocalDateTime;

import net.ttcxy.chat.db.Chat;
import net.ttcxy.chat.db.tables.records.GroupMemberRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GroupMember extends TableImpl<GroupMemberRecord> {

    private static final long serialVersionUID = -1384753098;

    /**
     * The reference instance of <code>chat.group_member</code>
     */
    public static final GroupMember GROUP_MEMBER = new GroupMember();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GroupMemberRecord> getRecordType() {
        return GroupMemberRecord.class;
    }

    /**
     * The column <code>chat.group_member.id</code>.
     */
    public final TableField<GroupMemberRecord, String> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>chat.group_member.group_id</code>.
     */
    public final TableField<GroupMemberRecord, String> GROUP_ID = createField(DSL.name("group_id"), org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>chat.group_member.member_id</code>.
     */
    public final TableField<GroupMemberRecord, String> MEMBER_ID = createField(DSL.name("member_id"), org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>chat.group_member.create_time</code>.
     */
    public final TableField<GroupMemberRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * Create a <code>chat.group_member</code> table reference
     */
    public GroupMember() {
        this(DSL.name("group_member"), null);
    }

    /**
     * Create an aliased <code>chat.group_member</code> table reference
     */
    public GroupMember(String alias) {
        this(DSL.name(alias), GROUP_MEMBER);
    }

    /**
     * Create an aliased <code>chat.group_member</code> table reference
     */
    public GroupMember(Name alias) {
        this(alias, GROUP_MEMBER);
    }

    private GroupMember(Name alias, Table<GroupMemberRecord> aliased) {
        this(alias, aliased, null);
    }

    private GroupMember(Name alias, Table<GroupMemberRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> GroupMember(Table<O> child, ForeignKey<O, GroupMemberRecord> key) {
        super(child, key, GROUP_MEMBER);
    }

    @Override
    public Schema getSchema() {
        return Chat.CHAT;
    }

    @Override
    public GroupMember as(String alias) {
        return new GroupMember(DSL.name(alias), this);
    }

    @Override
    public GroupMember as(Name alias) {
        return new GroupMember(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GroupMember rename(String name) {
        return new GroupMember(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GroupMember rename(Name name) {
        return new GroupMember(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, String, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
