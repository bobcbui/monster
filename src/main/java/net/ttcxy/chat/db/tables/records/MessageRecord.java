/*
 * This file is generated by jOOQ.
 */
package net.ttcxy.chat.db.tables.records;


import java.time.LocalDateTime;

import net.ttcxy.chat.db.tables.Message;

import org.jooq.Field;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MessageRecord extends TableRecordImpl<MessageRecord> implements Record6<String, String, String, String, Integer, LocalDateTime> {

    private static final long serialVersionUID = 1644928384;

    /**
     * Setter for <code>chat.message.id</code>.
     */
    public MessageRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>chat.message.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>chat.message.from</code>.
     */
    public MessageRecord setFrom(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>chat.message.from</code>.
     */
    public String getFrom() {
        return (String) get(1);
    }

    /**
     * Setter for <code>chat.message.to</code>.
     */
    public MessageRecord setTo(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>chat.message.to</code>.
     */
    public String getTo() {
        return (String) get(2);
    }

    /**
     * Setter for <code>chat.message.text</code>.
     */
    public MessageRecord setText(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>chat.message.text</code>.
     */
    public String getText() {
        return (String) get(3);
    }

    /**
     * Setter for <code>chat.message.type</code>.
     */
    public MessageRecord setType(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>chat.message.type</code>.
     */
    public Integer getType() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>chat.message.create_time</code>.
     */
    public MessageRecord setCreateTime(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>chat.message.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<String, String, String, String, Integer, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<String, String, String, String, Integer, LocalDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Message.MESSAGE.ID;
    }

    @Override
    public Field<String> field2() {
        return Message.MESSAGE.FROM;
    }

    @Override
    public Field<String> field3() {
        return Message.MESSAGE.TO;
    }

    @Override
    public Field<String> field4() {
        return Message.MESSAGE.TEXT;
    }

    @Override
    public Field<Integer> field5() {
        return Message.MESSAGE.TYPE;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Message.MESSAGE.CREATE_TIME;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getFrom();
    }

    @Override
    public String component3() {
        return getTo();
    }

    @Override
    public String component4() {
        return getText();
    }

    @Override
    public Integer component5() {
        return getType();
    }

    @Override
    public LocalDateTime component6() {
        return getCreateTime();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getFrom();
    }

    @Override
    public String value3() {
        return getTo();
    }

    @Override
    public String value4() {
        return getText();
    }

    @Override
    public Integer value5() {
        return getType();
    }

    @Override
    public LocalDateTime value6() {
        return getCreateTime();
    }

    @Override
    public MessageRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public MessageRecord value2(String value) {
        setFrom(value);
        return this;
    }

    @Override
    public MessageRecord value3(String value) {
        setTo(value);
        return this;
    }

    @Override
    public MessageRecord value4(String value) {
        setText(value);
        return this;
    }

    @Override
    public MessageRecord value5(Integer value) {
        setType(value);
        return this;
    }

    @Override
    public MessageRecord value6(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public MessageRecord values(String value1, String value2, String value3, String value4, Integer value5, LocalDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MessageRecord
     */
    public MessageRecord() {
        super(Message.MESSAGE);
    }

    /**
     * Create a detached, initialised MessageRecord
     */
    public MessageRecord(String id, String from, String to, String text, Integer type, LocalDateTime createTime) {
        super(Message.MESSAGE);

        set(0, id);
        set(1, from);
        set(2, to);
        set(3, text);
        set(4, type);
        set(5, createTime);
    }
}
